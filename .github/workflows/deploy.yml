name: Deploy

on:
  pull_request:
    paths:
      - .github/workflows/verify.yml
      - .github/workflows/deploy.yml
      - infrastructure/**
    types:
      - synchronize
      - opened
      - reopened

defaults:
  run:
    shell: bash -euo pipefail {0}

env:
  GCP_REGION: europe-west3
  GCP_ZONE: europe-west3-a
  KUDE_VERSION: v0.0.1-alpha02
  TERRAFORM_VERSION: 1.1.7
  TF_IN_AUTOMATION: true
  TF_VAR_gcp_region: europe-west3
  TF_VAR_gcp_zone: europe-west3-a

jobs:

  verify-cloud-infrastructure:
    name: Verify Cloud Infrastructure
    runs-on: ubuntu-20.04
    env:
      TF_VAR_environment: ${{ needs.infer-preview-environment.outputs.environment }}
      TF_VAR_gcp_billing_account: ${{ secrets.GCP_BILLING_ACCOUNT_ID }}
      TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT_ID }}
    defaults:
      run:
        working-directory: infrastructure/cloud
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v0
        with:
          service_account: ${{ secrets.GCP_SA_GHA_ARIKKFIR_DEPLOYMENT_NAME }}
          credentials_json: ${{ secrets.GCP_SA_GHA_ARIKKFIR_DEPLOYMENT_KEY }}
      - uses: google-github-actions/setup-gcloud@v0
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - run: terraform fmt -check -recursive -no-color -diff
        id: fmt
      - run: terraform init -input=false -no-color
      - run: terraform plan -input=false -lock-timeout=180s -no-color -out tfplan
        id: plan
      - run: tar cjvf tfplan.tar.bz2 .terraform .terraform.lock.hcl *.tf tfplan
      - uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: infrastructure/cloud/tfplan.tar.bz2
          if-no-files-found: error
          retention-days: 7
      - uses: thollander/actions-comment-pull-request@v1
        if: always()
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |-
            <details><summary>${{ steps.fmt.outcome == 'success' && '✅' || '❗️' }} Cloud Infrastructure formatting</summary>
            
            ```diff
            ${{ steps.fmt.outputs.stdout }}
            ```
            </details>

            <details><summary>${{ steps.plan.outcome == 'success' && '✅' || '❗️' }} Cloud Infrastructure plan</summary>
            
            ```HCL
            ${{ steps.plan.outputs.stdout }}
            ```
            </details>

  infer-preview-environment:
    name: Infer Preview Environment
    runs-on: ubuntu-20.04
    outputs:
      environment: ${{ steps.env.outputs.environment }}
    steps:
      - run: |+
          ENVIRONMENT="${BRANCH//\//-}"
          ENVIRONMENT="${BRANCH//./-}"
          ENVIRONMENT="${BRANCH//\?/-}"
          echo "::set-output name=environment::${ENVIRONMENT}"
        id: env
        env:
          BRANCH: ${{ github.head_ref }}

  deploy-preview-environment:
    name: Preview Environment
    needs: [ infer-preview-environment ]
    runs-on: ubuntu-20.04
    environment:
      name: ${{ needs.infer-preview-environment.outputs.environment }}
      url: https://${{ needs.infer-preview-environment.outputs.environment }}.env.kfirs.com
    concurrency:
      group: ${{ needs.infer-preview-environment.outputs.environment }}
      cancel-in-progress: false
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v0
        with:
          service_account: ${{ secrets.GCP_SA_GHA_ARIKKFIR_DEPLOYMENT_NAME }}
          credentials_json: ${{ secrets.GCP_SA_GHA_ARIKKFIR_DEPLOYMENT_KEY }}
      - uses: google-github-actions/setup-gcloud@v0
      - id: get-credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: primary
          location: ${{ env.GCP_ZONE }}
      - uses: ./.github/actions/setup-kude
        with:
          version: ${{ env.KUDE_VERSION }}
      - run: |+
          set -x
          kude build | tee kude.yaml

          cat kude.yaml
          echo "KUDE_YAML<<EOF" >> $GITHUB_ENV
          cat kude.yaml >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        working-directory: apps
        id: apply
      - uses: thollander/actions-comment-pull-request@v1
        if: always()
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |-
            <details><summary>${{ steps.apply.outcome == 'success' && '✅' || '❗️' }} Preview Apps deployment</summary>
            
            ```
            ${{ env.KUDE_YAML }}
            ```
            </details>

  deploy-production-environment:
    name: Production Cloud Infrastructure
    needs: [ verify-cloud-infrastructure, deploy-preview-environment ]
    runs-on: ubuntu-20.04
    environment:
      name: production
      url: https://kfirs.com
    concurrency:
      group: production
      cancel-in-progress: false
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v0
        with:
          service_account: ${{ secrets.GCP_SA_GHA_ARIKKFIR_DEPLOYMENT_NAME }}
          credentials_json: ${{ secrets.GCP_SA_GHA_ARIKKFIR_DEPLOYMENT_KEY }}
      - uses: google-github-actions/setup-gcloud@v0
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - uses: actions/download-artifact@v3
        with:
          name: tfplan
      - run: mkdir -pv apply && tar xjvf tfplan.tar.bz2 -C apply
      - run: terraform apply -input=false -lock-timeout=180s -auto-approve -no-color tfplan
        working-directory: apply
        id: apply-terraform
        env:
          TF_VAR_environment: production
          TF_VAR_gcp_billing_account: ${{ secrets.GCP_BILLING_ACCOUNT_ID }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT_ID }}
      - uses: thollander/actions-comment-pull-request@v1
        if: always()
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |-
            <details><summary>${{ steps.apply-terraform.outcome == 'success' && '✅' || '❗️' }} Production Cloud Infrastructure deployment</summary>
            
            ```HCL
            ${{ steps.apply-terraform.outputs.stdout }}
            ```
            </details>
      - uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: primary
          location: ${{ env.GCP_ZONE }}
      - uses: ./.github/actions/setup-kude
        with:
          version: ${{ env.KUDE_VERSION }}
      - run: |+
          set -x
          kude build | tee kude.yaml

          cat kude.yaml
          echo "KUDE_YAML<<EOF" >> $GITHUB_ENV
          cat kude.yaml >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        working-directory: infrastructure/cluster
        id: apply-kude
      - uses: thollander/actions-comment-pull-request@v1
        if: always()
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |-
            <details><summary>${{ steps.apply.outcome == 'success' && '✅' || '❗️' }} Production Cluster infrastructure deployment</summary>
            
            ```
            ${{ env.KUDE_YAML }}
            ```
            </details>
