name: Trigger Deployment

on:
  issue_comment:
    types: [ created ]

defaults:
  run:
    shell: bash -eu {0}

jobs:

  setup:
    name: Setup
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/deploy')
    runs-on: ubuntu-20.04
    outputs:
      branch: ${{ steps.infer.outputs.branch }}
      environment: ${{ steps.infer.outputs.environment }}
    steps:
      - uses: xt0rted/pull-request-comment-branch@v1
        id: get-branch-from-pr
      - run: |+
          set -x
          ENVIRONMENT="${BRANCH}"
          if [[ "${COMMENT}" =~ ${ENVIRONMENT_REGEX} ]]; then
            ENVIRONMENT="${BASH_REMATCH[1]}"
          fi
          ENVIRONMENT="${BRANCH//\//-}"
          ENVIRONMENT="${BRANCH//./-}"
          ENVIRONMENT="${BRANCH//\?/-}"
          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=environment::${ENVIRONMENT}"
        env:
          BRANCH: ${{ steps.get-branch-from-pr.outputs.head_ref }}
          COMMENT: ${{ github.event.comment.body }}
          ENVIRONMENT_REGEX: "^/deploy (.+)$"
        id: infer

  trigger-deployment:
    name: Deployment
    needs: setup
    uses: ./.github/workflows/deploy.yml
    with:
      branch: ${{ needs.setup.outputs.branch }}
      environment: ${{ needs.setup.outputs.environment }}
    secrets:
      GCP_BILLING_ACCOUNT_ID: ${{ secrets.GCP_BILLING_ACCOUNT_ID }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_SA_GHA_ARIKKFIR_DEPLOYMENT_KEY: ${{ secrets.GCP_SA_GHA_ARIKKFIR_DEPLOYMENT_KEY }}

  report:
    name: Report results on PR
    needs: [ setup, trigger-deployment ]
    runs-on: ubuntu-20.04
    steps:
      - uses: thollander/actions-comment-pull-request@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |-
            ### Terraform plan for "${{ needs.setup.outputs.environment }}": ${{ needs.deployment.outputs.plan_outcome }}
            ```HCL
            ${{ needs.deployment.outputs.plan_output }}
            ```
            
            ### Terraform apply to "${{ needs.setup.outputs.environment }}": ${{ needs.deployment.outputs.apply_outcome }}
            ```HCL
            ${{ needs.deployment.outputs.apply_output }}
            ```
